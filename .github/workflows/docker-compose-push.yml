name: Run Shell Script and Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Decode Google Service Account Key
        run: |
          set -x
          ENCODED_SECRET=$(echo -n '${{ secrets.GOOGLE_SA_KEY }}' | base64 | tr -d '\n')
          echo "ENCODED_SECRET=$ENCODED_SECRET" >> $GITHUB_ENV
        shell: bash

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build React Docker image
        run: |
          docker build -t nxgenailab_site_react ./react

      - name: Build FastAPI Docker image
        run: |
          docker build -t nxgenailab_site_fastapi ./fastapi

      - name: Tag and push React image
        run: |
          docker tag nxgenailab_site_react:latest ${{ secrets.DOCKERHUB_USERNAME }}/nxgenailab_site_react:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nxgenailab_site_react:latest

      - name: Tag and push FastAPI image
        run: |
          docker tag nxgenailab_site_fastapi:latest ${{ secrets.DOCKERHUB_USERNAME }}/nxgenailab_site_fastapi:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nxgenailab_site_fastapi:latest

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GOOGLE_SA_KEY }}
          project_id: nxgenailab

      - name: Deploy to Google Cloud Run
        run: |
          ls
          echo "$ENCODED_SECRET" | base64 --decode > /tmp/google_sa_key.json
          gcloud auth activate-service-account --key-file=/tmp/google_sa_key.json
          gcloud config set project nxgenailab
          gcloud run deploy nxgenailab-site-fastapi \
          --image=${{ secrets.DOCKERHUB_USERNAME }}/nxgenailab_site_fastapi:latest \
          --platform=managed \
          --region=us-east1 \
          --allow-unauthenticated \
          --set-env-vars ENCODED_SECRET="$ENCODED_SECRET"
        shell: bash